generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["relationJoins"]
  //  binaryTargets = ["native"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  email      String  @unique
  name       String  @unique
  password   String
  salt       String
  role       Int     @default(0) // admin: 1, none: 0
  posts      Post[]
  tags       Tag[]
  reply      Reply[]
  postAppend PostAppend[]
}

model Post {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  published  Boolean  @default(false)
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  tagId      Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  created    DateTime @default(now())
  updated    DateTime @default(now())
  reply      Reply[]  @relation("PostReplies")
  postAppend PostAppend[]
  LastReply  Reply?   @relation("LastReply", fields: [lastReply], references: [id])
  lastReply  Int?     @unique
}

model PostAppend {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  created   DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Reply {
  id        Int       @id @default(autoincrement())
  content   String
  postId    Int
  post      Post      @relation("PostReplies", fields: [postId], references: [id])
  created   DateTime  @default(now())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  lastReplyPost Post? @relation("LastReply")
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  posts       Post[]
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  created     DateTime @default(now())
  updated     DateTime @default(now())
}